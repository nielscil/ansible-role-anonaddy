---

# Project source code URL: https://github.com/anonaddy/anonaddy

anonaddy_enabled: true

anonaddy_identifier: anonaddy
anonaddy_rspamd_identifier: "{{ anonaddy_identifier}}-rspamd"

anonaddy_uid: ''
anonaddy_gid: ''

anonaddy_version: 0.14.0-r0

# The hostname at which anonaddy is served.
anonaddy_hostname: ''
anonaddy_rspamd_hostname: ''

# The path at which anonaddy is served.
# This value must either be `/` or not end with a slash (e.g. `/anonaddy`).
anonaddy_path_prefix: /
anonaddy_rspamd_path_prefix: /

anonaddy_base_path: "/{{ anonaddy_identifier }}"
anonaddy_data_dir_path: "{{ anonaddy_base_path }}/data"

anonaddy_container_image: "{{ anonaddy_container_image_registry_prefix }}anonaddy/anonaddy:{{ anonaddy_container_image_tag }}"
anonaddy_container_image_registry_prefix: docker.io/
anonaddy_container_image_tag: "{{ anonaddy_version }}"
anonaddy_container_image_force_pull: "{{ anonaddy_container_image.endswith(':latest') }}"

# The base container network. It will be auto-created by this role if it doesn't exist already.
anonaddy_container_network: "{{ anonaddy_identifier }}"

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
anonaddy_container_additional_networks: "{{ anonaddy_container_additional_networks_auto + anonaddy_container_additional_networks_custom }}"
anonaddy_container_additional_networks_auto: []
anonaddy_container_additional_networks_custom: []

# Specifies how the container publishes its HTTP port
#
# Takes an "<ip>:<port>" value (e.g. "127.0.0.1:8000"), just a port number or an empty string to not expose.
anonaddy_container_http_port: 8000
anonaddy_container_http_bind_port: ''
anonaddy_container_rspamd_http_port: 11334
anonaddy_container_rspamd_http_bind_port: ''
anonaddy_container_smtp_port: 25
anonaddy_container_smtp_bind_port: 25
anonaddy_container_rspamd_bind_port: ''

# anonaddy_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `anonaddy_container_labels_additional_labels`.
anonaddy_container_labels_traefik_enabled: true
anonaddy_container_labels_traefik_docker_network: "{{ anonaddy_container_network }}"
anonaddy_container_labels_traefik_hostname: "{{ anonaddy_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/anonaddy`).
anonaddy_container_labels_traefik_path_prefix: "{{ anonaddy_path_prefix }}"
anonaddy_container_labels_traefik_rule: "Host(`{{ anonaddy_container_labels_traefik_hostname }}`){% if anonaddy_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ anonaddy_container_labels_traefik_path_prefix }}`){% endif %}"
anonaddy_container_labels_traefik_priority: 0
anonaddy_container_labels_traefik_entrypoints: web-secure
anonaddy_container_labels_traefik_tls: "{{ anonaddy_container_labels_traefik_entrypoints != 'web' }}"
anonaddy_container_labels_traefik_tls_certResolver: default  # noqa var-naming

anonaddy_container_rspamd_labels_hostname: "{{ anonaddy_rspamd_hostname }}"
anonaddy_container_rspamd_labels_path_prefix: "{{ anonaddy_rspamd_path_prefix }}"
anonaddy_container_rspamd_labels_rule: "Host(`{{ anonaddy_container_rspamd_labels_hostname }}`){% if anonaddy_container_rspamd_labels_path_prefix != '/' %} && PathPrefix(`{{ anonaddy_container_rspamd_labels_path_prefix }}`){% endif %}"
anonaddy_container_rspamd_labels_priority: 0
anonaddy_container_rspamd_labels_traefik_entrypoints: web-secure
anonaddy_container_rspamd_labels_tls: "{{ anonaddy_container_rspamd_labels_traefik_entrypoints != 'web' }}"
anonaddy_container_rspamd_labels_tls_certResolver: default

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `anonaddy_container_labels_traefik_additional_response_headers_custom`
anonaddy_container_labels_traefik_additional_request_headers: "{{ anonaddy_container_labels_traefik_additional_request_headers_auto | combine(anonaddy_container_labels_traefik_additional_request_headers_custom) }}"
anonaddy_container_labels_traefik_additional_request_headers_auto: {}
anonaddy_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `anonaddy_container_labels_traefik_additional_response_headers_custom`
anonaddy_container_labels_traefik_additional_response_headers: "{{ anonaddy_container_labels_traefik_additional_response_headers_auto | combine(anonaddy_container_labels_traefik_additional_response_headers_custom) }}"
anonaddy_container_labels_traefik_additional_response_headers_auto: {}
anonaddy_container_labels_traefik_additional_response_headers_custom: {}

# anonaddy_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# anonaddy_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
anonaddy_container_labels_additional_labels: ''

# A list of additional "volumes" to mount in the container.
#
# See the `--mount` documentation for the `docker run` command.
#
# Example:
# anonaddy_container_additional_volumes:
#   - type: bind
#     src: /path/on/the/host
#     dst: /data
#   - type: bind
#     src: /another-path/on/the/host
#     dst: /read-only
#     options: readonly
anonaddy_container_additional_volumes: []

# A list of extra arguments to pass to the container
anonaddy_container_extra_arguments: []

anonaddy_timezone: 'UTC'
anonaddy_listen_ipv6: true
anonaddy_real_ip_from: '0.0.0.0/32'

anonaddy_name: AnonAddy
anonaddy_key: '' # "base64:$(openssl rand -base64 32)"
anonaddy_secret: '' # Long random string used when hashing data for the anonymous replies required
anonaddy_enable_registration: false

anonaddy_mail_hostname: ''
anonaddy_domain: ''
anonaddy_all_domains: "{{ [anonaddy_domain] + anonaddy_additional_domains }}"
anonaddy_additional_domains: []

anonaddy_limit_email_forward_and_reply: 200
anonaddy_limit_bandwidth: 104857600
anonaddy_limit_new_aliases: 10
anonaddy_limit_additional_username_limit: 10

anonaddy_gpg_signing_key_fingerprint: ''
anonaddy_dkim_signing_key_path: "/data/dkim/{{ anonaddy_domain }}.private"
anonaddy_dkim_selector: default

anonaddy_database_username: anonaddy
anonaddy_database_password: ''
anonaddy_database_hostname: ''
anonaddy_database_port: 3306
anonaddy_database_name: anonaddy

anonaddy_redis_host: ''
anonaddy_redis_port: 6379
anonaddy_redis_password: ''

anonaddy_mail_from_name: AnonAddy
anonaddy_mail_from_address: "anonaddy@{{ anonaddy_domain }}"
anonaddy_mail_encryption: ''

anonaddy_relayhost: ''
anonaddy_relayport: ''
anonaddy_relay_username: ''
anonaddy_relay_password: ''

anonaddy_spamhaus_dqs_key: ''

anonaddy_rspamd_enabled: false
anonaddy_rspamd_password: ''

# Additional environment variables.
anonaddy_environment_variables_additional_variables: ''

# List of systemd services that anonaddy.service depends on
anonaddy_systemd_required_services_list: "{{ anonaddy_systemd_required_systemd_services_list_default + anonaddy_systemd_required_systemd_services_list_auto + anonaddy_systemd_required_systemd_services_list_custom }}"
anonaddy_systemd_required_systemd_services_list_default: ['docker.service']
anonaddy_systemd_required_systemd_services_list_auto: []
anonaddy_systemd_required_systemd_services_list_custom: []
